# -*- coding: utf-8 -*-
"""actor_critic_network.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TaUTHPU-mbQWhZ1lzCcCP5YnXMdJvVe0
"""

#fc_1 => fully connected layer 1
#v=> value_function, pi is policy

import os
from tensorflow.keras.layers import Dense

class ActorCriticNetwork(keras.Model):
  def __init__(self,n_actions,layer_1_dms=10,layer_2_dms=5,name='actor_critic',
               checkpoint_dir='/content/tmp/actor_critic'):
    super(ActorCriticNetwork,self).__init__()
    self.layer_1_dms = layer_1_dms
    self.layer_2_dms = layer_2_dms
    self.n_actions = n_actions
    self.model_name = name
    self.check_point_dir = checkpoint_dir
    self.check_point_file = os.path.join(self.check_point_dir+name+'_ac')
    self.fc1 = Dense(self.layer_1_dms,activation='relu')
    self.fc2 = Dense(self.layer_2_dms,activation='relu')
    self.v=Dense(1,activation=None)
    self.pi = Dense(self.n_actions,activation='softmax')
  def call(self,state):
     value = self.fc1(state)
     value = self.fc2(value)

     value_fn = self.v(value)
     policy_pi = self.pi(value)
     value_fn = value_fn*100000
     policy_pi = policy_pi*100000
     print(policy_pi,value_fn)

     return value_fn,policy_pi